{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module" // Allows for the use of imports
  },
  "rules": {
    "no-multiple-empty-lines": [
      2,
      {
        "max": 2
      }
    ],
    "semi": [
      2,
      "always"
    ],
    "curly": [
      "warn"
    ],
    "prefer-template": [
      "warn"
    ],
    "space-before-function-paren": [
      0,
      {
        "anonymous": "always",
        "named": "always"
      }
    ],
    "camelcase": 0,
    "no-return-assign": 0,
    "quotes": [
      "error",
      "single"
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "import/no-unresolved": 0,
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "type",
          "object"
        ],
        "newlines-between": "always"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn", // Discourage using `any` type
    "@typescript-eslint/consistent-type-imports": [
      "warn",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": false
      }
    ], // Enforces using type imports for better type safety
    // Disable no-var-requires to allow require statements
    "@typescript-eslint/no-var-requires": "off",
    "prefer-const": [
      "warn",
      {
        "destructuring": "all"
      }
    ], // Suggest using `const` where possible
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ], // Disallow `console.log` but allow warnings and errors
    "no-debugger": "warn", // Warn when using `debugger`
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true
      }
    ], // Disallow unused expressions but allow short circuit and ternary expressions
    "@typescript-eslint/explicit-function-return-type": "off", // Turn off explicit return types for brevity
    "@typescript-eslint/no-inferrable-types": "warn", // Avoid unnecessary type annotations
    "arrow-body-style": [
      "warn",
      "as-needed"
    ], // Enforce concise arrow function bodies when possible
    "import/no-duplicates": "warn", // Disallow duplicate imports
    "import/newline-after-import": "warn", // Enforce a newline after imports
    "import/first": "warn", // Ensure all imports appear at the top of the file
    "no-shadow": "warn" // Warn about variable shadowing
  }
}
